name: Deploy to Production


on:
  pull_request:
    branches:
      - main
    types: [closed] # Only trigger when PR is closed (merged or not)

jobs:
  # This is the first job that runs automatically.
  # It can be used for building, testing, etc.
  build:
    # if: ${{ github.event.review.state == 'approved' }} # Only run if the review is approved.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tests
        run: |
          echo "Running tests..."
          # Replace with your actual test commands
          
      - name: Build application
        run: |
          echo "Building the application..."
          # Replace with your actual build commands
  # This is the second job that requires manual approval.
  # It depends on the 'build' job completing successfully.
  deploy-uat:
    runs-on: ubuntu-latest
    needs: build # This ensures the 'build' job runs and passes first.
    environment: uat # This links the job to the environment you created.
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        run: |
          echo "Deployment to uat is approved and starting..."
          # Replace with your actual deployment commands, e.g., SSH, Docker, etc.
          # For example:
          # scp -r ./dist user@server:/var/www/html/

      - name: Push main commit to uat branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push origin HEAD:uat -f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-uat # This ensures the 'build' job runs and passes first.
    environment: production # This links the job to the environment you created.
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server
        run: |
          echo "Deployment to production is approved and starting..."
          # Replace with your actual deployment commands, e.g., SSH, Docker, etc.
          # For example:
          # scp -r ./dist user@server:/var/www/html/

      - name: Push main commit to production branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push origin HEAD:production -f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
